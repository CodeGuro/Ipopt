# MatlabInterface.site
# This is a config.site file to set appropriate flags for
# building the Matlab Mex interface to Ipopt. Usage:
# (assuming build directory is one level below configure)
# ../configure CONFIG_SITE=$PWD/../MatlabInterface.site \
#   --with-matlab-home=<output of matlabroot command in matlab> \
#   CC=<location of C compiler> CXX=<location of C++ compiler> \
#   F77=<location of Fortran compiler>
# Ipopt configure will look for matlab on the path if you don't
# specify --with-matlab-home. If the following command:
# which matlab && ls -l $(which matlab)
# does not point to the version of Matlab you want, you need
# to provide the correct path in --with-matlab-home.
# Ipopt configure will choose CC, CXX, and F77 automatically
# if you do not specify them. If the g++ or user-specified CXX
# compiler is capable of statically linking libstdc++ (and the
# libgfortran.a of gfortran or the user-specified F77 compiler)
# into a shared library (4.5 or newer on Mac or Windows,
# 4.7.3 or newer built --with-pic on Linux) then this script
# will set up the Ipopt Matlab interface with all standard
# libraries statically linked. This way the same mex file
# should be usable across multiple versions of Matlab.
# If this causes any problems you can disable this behavior
# by setting the flag --disable-matlab-static to configure.
#
# If you also specify --enable-matlab-ma57 in your configure call,
# this file will set appropriate flags to use Matlab's MA57 library.
# Note that when using Matlab's MA57, standalone Ipopt executables
# (such as from "make test") require setting the environment variable
# LD_LIBRARY_PATH=$MATLAB_HOME/bin/$ARCH:$MATLAB_HOME/sys/os/$ARCH
# (DYLD_LIBRARY_PATH=$MATLAB_HOME/bin/$ARCH on Mac OS X) where $ARCH
# is one of glnxa64, maci64, win32, win64, etc, in order to properly
# work. If you're using a compiler version that doesn't match Matlab's
# (see http://www.mathworks.com/support/sysreq/previous_releases.html)
# then you should compile the mex file *before* setting LD_LIBRARY_PATH,
# otherwise the mex file may end up with conflicting standard libraries.

# First set the recommended flags for Matlab interface compilation
if test x"$enable_shared" != xyes; then
  enable_shared=no
fi
if test x"$with_pic" != xno; then
  with_pic=yes
fi
if test -z "$with_blas"; then
  with_blas=BUILD
fi
if test -z "$with_lapack"; then
  with_lapack=BUILD
fi

# Unless user set --disable-matlab-static, enable static linking against
# standard libraries (if possible and not forbidden) and disable
# use of pthread library under mingw (seem to have only dll)
if test x"$enable_matlab_static" != xno; then
  if test x"$enable_static_standardlibs" != xno ; then
    enable_static_standardlibs=auto
  fi

  case `uname` in
    MINGW*)
      if test -z "$enable_pthread_mumps"; then
        enable_pthread_mumps=no
      fi
      ;;
  esac
  # Prevent -lgcc_s from being pulled in during "checking for Fortran libraries of gfortran"
  ADD_FFLAGS="$ADD_FFLAGS -static-libgcc"
fi

